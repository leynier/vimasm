%include "video.mac"
%include "keyboard.mac"

section .data

ASCII_CODE db 0x00, 0x1B, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x30, 0x2D, 0x3D, 0x08, 0x09, 0x71, 0x77, 0x65, 0x72, 0x74, 0x79, 0x75, 0x69, 0x6F, 0x70, 0x5B, 0x5D, 0x0D, 0x00, 0x61, 0x73, 0x64, 0x66, 0x67, 0x68, 0x6A, 0x6B, 0x6C, 0x3B, 0x27, 0x60, 0x00, 0x5C, 0x7A, 0x78, 0x63, 0x76, 0x62, 0x6E, 0x6D, 0x2C, 0x2E, 0x2F, 0x00, 0x2A, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2D, 0x00, 0x00, 0x00, 0x2B, 0x00, 0x00, 0x00, 0x00, 0x00
ASCII_CODE_LEN dd 84

section .text

extern clear
extern scan
extern calibrate
extern putc

%macro FILL_SCREEN 1
  push word %1
  call clear
%endmacro

global main
main:
  ; Move text mode cursor off screen.
  mov dx, 0x3D4
  mov al, 0x0E
  out dx, al
  inc dx
  mov al, 0xFF
  out dx, al

  FILL_SCREEN BG.BLACK

  ; Calibrate the timing
  call calibrate

  xor ecx, ecx

  main.loop:
    .input:
      xor eax, eax
      call scan
      cmp eax, [ASCII_CODE_LEN]
      jae .input
      mov al, [ASCII_CODE + eax]
      xor ax, FG.BRIGHT | FG.GREEN
      push cx
      push ax
      call putc
      inc cx

    jmp main.loop